apiVersion: apps/v1
kind: Deployment
metadata:
  name: haproxy
  labels:
    app: haproxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: haproxy
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels:
        app: haproxy
      # trik sederhana agar pod rolling saat ConfigMap berubah (ubah value ini saat update)
      annotations:
        config/hash: 'v1'
    spec:
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 20
      containers:
        - name: haproxy
          image: haproxy:2.9
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
          # liveness/readiness: sederhana & aman
          livenessProbe:
            tcpSocket: { port: 8080 }
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 256Mi
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop: ['ALL']
          volumeMounts:
            - name: haproxy-config-volume
              mountPath: /usr/local/etc/haproxy/haproxy.cfg
              subPath: haproxy.cfg
      volumes:
        - name: haproxy-config-volume
          configMap:
            name: haproxy-config

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: haproxy-config
data:
  haproxy.cfg: |
    global
        log stdout format raw local0

    defaults
        mode http
        option forwardfor
        timeout connect 5s
        timeout client  50s
        timeout server  50s

    resolvers mydns
        nameserver dns1 8.8.8.8:53
        hold valid 10s

    frontend http_front
        bind *:8080
        default_backend web_backends

    backend web_backends
        balance roundrobin
        option httpchk GET /pages/hello
        server hb1 https://myapp-route-wirajayaabadi-dev.apps.rm2.thpm.p1.openshiftapps.com resolvers mydns
        server hb2 https://myapp-route-biruswasana-dev.apps.rm1.0a51.p1.openshiftapps.com resolvers mydns
        server hb3 https://myapp-route-fchbrnn-dev.apps.rm1.0a51.p1.openshiftapps.com resolvers mydns
        server hb4 https://myapp-route-dianmatondang012-dev.apps.rm1.0a51.p1.openshiftapps.com resolvers mydns
        server hb5 https://myapp-route-rafyryana-dev.apps.rm1.0a51.p1.openshiftapps.com resolvers mydns

---
apiVersion: v1
kind: Service
metadata:
  name: haproxy
  labels:
    app: haproxy
spec:
  selector:
    app: haproxy
  type: ClusterIP
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8080
