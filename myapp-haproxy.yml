apiVersion: v1
kind: ConfigMap
metadata:
  name: haproxy-config
  namespace: wirajayaabadi-dev
data:
  haproxy.cfg: |
    global
        daemon
        maxconn 4096
        log stdout local0 info

    defaults
        mode http
        log global
        option httplog
        option dontlognull
        timeout connect 5s
        timeout client 30s
        timeout server 30s
        timeout http-request 10s
        timeout http-keep-alive 2s
        timeout check 10s
        retries 3
        option redispatch
        balance roundrobin

    frontend myapp_frontend
        bind *:8080
        # Redirect root path to /pages/hello
        http-request redirect location /pages/hello if { path / }
        
        default_backend myapp_servers
        # Health check endpoint
        monitor-uri /haproxy-health

    backend myapp_servers
        # Health check using correct path
        option httpchk GET /pages/hello
        http-check expect status 200
        
        # OpenShift cluster servers with health check
        server app1 myapp-route-wirajayaabadi-dev.apps.rm2.thpm.p1.openshiftapps.com:443 check ssl verify none
        server app2 myapp-route-biruswasana-dev.apps.rm1.0a51.p1.openshiftapps.com:443 check ssl verify none
        server app3 myapp-route-fchbrnn-dev.apps.rm1.0a51.p1.openshiftapps.com:443 check ssl verify none
        server app4 myapp-route-dianmatondang012-dev.apps.rm1.0a51.p1.openshiftapps.com:443 check ssl verify none
        server app5 myapp-route-rafyryana-dev.apps.rm1.0a51.p1.openshiftapps.com:443 check ssl verify none

    # Statistics page
    listen stats
        bind *:8404
        stats enable
        stats uri /stats
        stats refresh 30s
        stats admin if TRUE

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: haproxy-lb
  namespace: wirajayaabadi-dev
  labels:
    app: haproxy-lb
spec:
  replicas: 2
  selector:
    matchLabels:
      app: haproxy-lb
  template:
    metadata:
      labels:
        app: haproxy-lb
    spec:
      containers:
      - name: haproxy
        image: haproxy:2.8-alpine
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 8404
          name: stats
          protocol: TCP
        volumeMounts:
        - name: haproxy-config
          mountPath: /usr/local/etc/haproxy/haproxy.cfg
          subPath: haproxy.cfg
          readOnly: true
        livenessProbe:
          httpGet:
            path: /haproxy-health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /haproxy-health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "500m"
      volumes:
      - name: haproxy-config
        configMap:
          name: haproxy-config
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: haproxy-lb-service
  namespace: wirajayaabadi-dev
  labels:
    app: haproxy-lb
spec:
  type: ClusterIP
  selector:
    app: haproxy-lb
  ports:
  - name: http
    port: 80
    targetPort: 8080
    protocol: TCP
  - name: stats
    port: 8404
    targetPort: 8404
    protocol: TCP

---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: haproxy-lb-route
  namespace: wirajayaabadi-dev
  labels:
    app: haproxy-lb
spec:
  host: haproxy-lb-wirajayaabadi.apps.rm2.thpm.p1.openshiftapps.com
  to:
    kind: Service
    name: haproxy-lb-service
    weight: 100
  port:
    targetPort: http
  wildcardPolicy: None

---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: haproxy-stats-route
  namespace: wirajayaabadi-dev
  labels:
    app: haproxy-lb
spec:
  host: haproxy-stats-wirajayaabadi.apps.rm2.thpm.p1.openshiftapps.com
  to:
    kind: Service
    name: haproxy-lb-service
    weight: 100
  port:
    targetPort: stats
  wildcardPolicy: None

---
apiVersion: networking.k8s.io/v1

apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: haproxy-lb-pdb
  namespace: wirajayaabadi-dev
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: haproxy-lb